# GitHub Actions workflow for deploying Next.js app to Azure App Service
# This workflow triggers on pushes to main branch and deploys to Azure App Service

name: Deploy Next.js to Azure App Service

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [closed]
  workflow_dispatch:

env:
  NODE_VERSION: "18.x" # Use Node.js 18 (recommended for Next.js 15.x)
  AZURE_WEBAPP_NAME: "great-next-simple" # Deploying to great-next-simple App Service
  AZURE_WEBAPP_PACKAGE_PATH: "." # Path to your application code

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Run linting (optional but recommended)
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true # Don't fail deployment if linting fails

      # Build the Next.js application
      - name: Build Next.js application
        run: npm run build

      # Create a deployment package (zip file)
      - name: Create deployment package
        run: |
          # Remove node_modules to reduce package size
          rm -rf node_modules
          # Install only production dependencies
          npm ci --only=production
          # Create deployment archive excluding unnecessary files
          zip -r deployment.zip . -x "*.git*" "node_modules/@types/*" "*.md" ".github/*" "docs/*" "docs-personal/*"

      # Login to Azure using Service Principal
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy to Azure App Service using Service Principal
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: "./deployment.zip"

  # Optional: Health check after deployment
  health-check:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success()

    steps:
      - name: Application Health Check
        run: |
          # Wait a moment for deployment to complete
          sleep 30
          # Check if the great-next-simple app is responding
          curl -f https://great-next-simple.azurewebsites.net/ || exit 1
          echo "Application is healthy and responding!"
